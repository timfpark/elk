apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper
  replicas: 3
  template:
    metadata:
      labels:
        name: zookeeper
      annotations:
        pod.beta.kubernetes.io/initialized: "true"
    spec:
      volumes:
        - name: exhibitor
          azureFile:
            secretName: azure-secret
            shareName: zookeeper
            readOnly: false
      containers:
      - name: zookeeper
        image: mbabineau/zookeeper-exhibitor
        imagePullPolicy: Always
        livenessProbe:
          tcpSocket:
            port: 8181
          initialDelaySeconds: 60
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /exhibitor/v1/cluster/4ltr/ruok
            port: 8181
          initialDelaySeconds: 120
          timeoutSeconds: 1
        volumeMounts:
        - name: datadir
          mountPath: /opt/zookeeper/snapshots
          subPath: zk_data_dir
        - name: datadir
          mountPath: /opt/zookeeper/transactions
          subPath: zk_log_dir
        - name: exhibitor
          mountPath: /opt/zookeeper/local_configs
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ZK_DATA_DIR
          value: /opt/zookeeper/snapshots
        - name: ZK_LOG_DIR
          value: /opt/zookeeper/transactions
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.beta.kubernetes.io/storage-class: zookeeper
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 60Gi
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    name: zookeeper
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 2181
    protocol: TCP
    name: zk
  - port: 8181
    protocol: TCP
    name: api
  selector:
    name: zookeeper
